import{_ as s,c as a,o as n,a4 as i}from"./chunks/framework.DpC1ZpOZ.js";const b=JSON.parse('{"title":"开源项目","description":"","frontmatter":{"outline":"deep","lastUpdated":true},"headers":[],"relativePath":"examples/ruoyi-cloud-work-item.md","filePath":"examples/ruoyi-cloud-work-item.md","lastUpdated":null}'),e={name:"examples/ruoyi-cloud-work-item.md"},t=i(`<h1 id="开源项目" tabindex="-1">开源项目 <a class="header-anchor" href="#开源项目" aria-label="Permalink to &quot;开源项目&quot;">​</a></h1><p>整理整理一些自己的javaWeb开源项目，本文档记录的网站样例为：若依spring-Cloud版。</p><p>ruoyi-vue分离版本人演示地址：<a href="http://8.138.177.13:81" target="_blank" rel="noreferrer">http://8.138.177.13:81</a></p><p>ruoyi-cloud微服务版官方演示地址：<a href="http://cloud.ruoyi.vip" target="_blank" rel="noreferrer">http://cloud.ruoyi.vip</a></p><p>ruoyi-cloud微服务版官方文档地址：<a href="https://doc.ruoyi.vip/ruoyi-cloud/" target="_blank" rel="noreferrer">https://doc.ruoyi.vip/ruoyi-cloud/</a></p><p>ruoyi-cloud微服务版代码下载地址：<a href="https://gitee.com/y_project/RuoYi-Cloud" target="_blank" rel="noreferrer">https://gitee.com/y_project/RuoYi-Cloud</a></p><h2 id="若依微服务版架构图" tabindex="-1">若依微服务版架构图 <a class="header-anchor" href="#若依微服务版架构图" aria-label="Permalink to &quot;若依微服务版架构图&quot;">​</a></h2><p><img src="https://img.picgo.net/2024/09/22/ruoyi-cloud-frameworkec294d136475284c.png" alt="ruoyi-cloud-framework.png" loading="lazy"></p><div class="tip custom-block"><p class="custom-block-title">提示</p><p>架构图 <a href="https://www.processon.com/view/5ec290195653bb6f2a18504e" target="_blank" rel="noreferrer">RuoYi-Cloud-Processon</a>分享地址。</p></div><h2 id="ruoyi-vue微服务版-若依框架搭建-🌐" tabindex="-1">(ruoyi-vue微服务版)若依框架搭建 🌐 <a class="header-anchor" href="#ruoyi-vue微服务版-若依框架搭建-🌐" aria-label="Permalink to &quot;(ruoyi-vue微服务版)若依框架搭建 🌐&quot;">​</a></h2><h3 id="运行" tabindex="-1">运行 <a class="header-anchor" href="#运行" aria-label="Permalink to &quot;运行&quot;">​</a></h3><h4 id="本地环境" tabindex="-1">本地环境 <a class="header-anchor" href="#本地环境" aria-label="Permalink to &quot;本地环境&quot;">​</a></h4><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>JDK &gt;= 1.8 (推荐1.8版本)</span></span>
<span class="line"><span>Mysql &gt;= 5.7.0 (推荐5.7版本)</span></span>
<span class="line"><span>Redis &gt;= 3.0</span></span>
<span class="line"><span>Maven &gt;= 3.0</span></span>
<span class="line"><span>Node &gt;= 12</span></span>
<span class="line"><span>nacos &gt;= 2.0.4 (ruoyi-cloud &lt; 3.0 需要下载nacos &gt;= 1.4.x版本)</span></span>
<span class="line"><span>sentinel &gt;= 1.6.0</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p>因为本项目是微服务的，所以需要前后端都单独启动好，才能进行访问。同时后端需要启动多个模块。</p><h4 id="在本地环境运行后端" tabindex="-1">在本地环境运行后端 <a class="header-anchor" href="#在本地环境运行后端" aria-label="Permalink to &quot;在本地环境运行后端&quot;">​</a></h4><ol><li>导入到<code>Eclipse</code>，菜单 <code>File</code> -&gt; <code>Import</code>，然后选择 <code>Maven</code> -&gt; <code>Existing Maven Projects</code>，点击 <code>Next</code>&gt; 按钮，选择工作目录，然后点击 <code>Finish</code> 按钮，即可成功导入。 <code>Eclipse</code>会自动加载<code>Maven</code>依赖包，初次加载会比较慢（根据自身网络情况而定）</li><li>创建数据库<code>ry-cloud</code>并导入数据脚本<code>ry_2021xxxx.sql</code>（必须），<code>quartz.sql</code>（可选）</li><li>创建数据库<code>ry-config</code>并导入数据脚本<code>ry_config_2021xxxx.sql</code>（必须）</li></ol><div class="language-sql vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"># 导入数据</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">mysql</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> CREATE</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> DATABASE</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> \`ry-vue\`</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> CHARACTER</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> SET</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> utf8;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">mysql</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> use</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ry</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">vue;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">mysql</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> source </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">home</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">ry</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">vue</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/sql/</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">ry_20240629</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">sql</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>导出数据和表结构：</p><div class="language-sh vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">mysqldump</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -u用户名</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -p密码</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 数据库名</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 数据库名.sql</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><ol start="4"><li>配置<code>nacos</code>持久化，修改<code>conf/application.properties</code>文件，增加支持<code>mysql</code>数据源配置</li></ol><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span># db mysql</span></span>
<span class="line"><span>spring.datasource.platform=mysql</span></span>
<span class="line"><span>db.num=1</span></span>
<span class="line"><span>db.url.0=jdbc:mysql://localhost:3306/ry-config?characterEncoding=utf8&amp;connectTimeout=1000&amp;socketTimeout=3000&amp;autoReconnect=true&amp;useUnicode=true&amp;useSSL=false&amp;serverTimezone=UTC</span></span>
<span class="line"><span>db.user=root</span></span>
<span class="line"><span>db.password=password</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><div class="tip custom-block"><p class="custom-block-title">提示</p><p>配置文件<code>application.properties</code>是在下载的<code>nacos-server</code>包<code>conf</code>目录下。 最新<code>RuoYi-Cloud</code>版本<code>&gt;=3.0.0</code>需要下载的<code>nacos-server</code>必须<code>&gt;=2.x.x</code>版本。 默认配置单机模式，<code>nacos</code>集群/多集群部署模式参考 <a href="https://nacos.io/zh-cn/docs/deployment.html" target="_blank" rel="noreferrer"><code>Nacos</code>支持三种部署模式</a></p></div><ol start="5"><li>打开运行基础模块（启动没有先后顺序）</li></ol><table tabindex="0"><thead><tr><th>模块名</th><th style="text-align:left;">备注</th></tr></thead><tbody><tr><td>RuoYiGatewayApplication</td><td style="text-align:left;">网关模块 （必须）</td></tr><tr><td>RuoYiAuthApplication</td><td style="text-align:left;">认证模块 （必须）</td></tr><tr><td>RuoYiSystemApplication</td><td style="text-align:left;">系统模块 （必须）</td></tr><tr><td>RuoYiMonitorApplication</td><td style="text-align:left;">监控中心 （可选）</td></tr><tr><td>RuoYiGenApplication</td><td style="text-align:left;">代码生成 （可选）</td></tr><tr><td>RuoYiJobApplication</td><td style="text-align:left;">定时任务 （可选）</td></tr><tr><td>RuoYFileApplication</td><td style="text-align:left;">文件服务 （可选）</td></tr></tbody></table><p>打开项目运行<code>com.ruoyi.system.RuoYiSystemApplication.java</code>，出现如下图表示启动成功。</p><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>(♥◠‿◠)ﾉﾞ  系统模块启动成功   ლ(´ڡ\`ლ)ﾞ  </span></span>
<span class="line"><span> .-------.       ____     __        </span></span>
<span class="line"><span> |  _ _   \\      \\   \\   /  /    </span></span>
<span class="line"><span> | ( &#39; )  |       \\  _. /  &#39;       </span></span>
<span class="line"><span> |(_ o _) /        _( )_ .&#39;         </span></span>
<span class="line"><span> | (_,_).&#39; __  ___(_ o _)&#39;          </span></span>
<span class="line"><span> |  |\\ \\  |  ||   |(_,_)&#39;         </span></span>
<span class="line"><span> |  | \\ \`&#39;   /|   \`-&#39;  /           </span></span>
<span class="line"><span> |  |  \\    /  \\      /           </span></span>
<span class="line"><span> &#39;&#39;-&#39;   \`&#39;-&#39;    \`-..-&#39;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><div class="tip custom-block"><p class="custom-block-title">提示</p><p>运行前需要先启动<code>nacos</code>，运行成功可以通过(<code>localhost:8080</code>)访问，但是不会出现静态页面，可以继续参考下面步骤部署<code>ruoyi-ui</code>前端，然后通过前端地址来访问。</p></div><ol start="6"><li>集成seata分布式事务（可选配置，默认不启用）</li></ol><p>创建数据库<code>ry-seata</code>并导入数据脚本<code>ry_seata_2021xxxx.sql</code><a href="https://doc.ruoyi.vip/ruoyi-cloud/cloud/seata.html#%E9%9B%86%E6%88%90nacos%E9%85%8D%E7%BD%AE%E4%B8%AD%E5%BF%83" target="_blank" rel="noreferrer">参考集成nacos配置中心</a> :::</p><h4 id="在本地环境运行前端" tabindex="-1">在本地环境运行前端 <a class="header-anchor" href="#在本地环境运行前端" aria-label="Permalink to &quot;在本地环境运行前端&quot;">​</a></h4><div class="language-sh vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 进入项目目录</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ruoyi-ui</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 安装依赖</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 强烈建议不要用直接使用 cnpm 安装，会有各种诡异的 bug，可以通过重新指定 registry 来解决 npm 安装速度慢的问题。</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --registry=https://registry.npmmirror.com</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 本地开发 启动项目</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> dev</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><div class="tip custom-block"><p class="custom-block-title">提示</p><p>前端运行成功可以通过(<code>localhost:80</code>) 默认账户/密码 admin/admin123） 若能正确展示登录页面，并能成功登录，菜单及页面展示正常，则表明环境搭建成功。</p></div><p>前端配置 修改前端配置，编辑<code>ruoyi-ui</code>目录下的<code>vue.config.js</code></p><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // webpack-dev-server 相关配置</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  devServer</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    host</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;0.0.0.0&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    # 前端的</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">HTTP</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">端口，默认为80</span></span>
<span class="line highlighted"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    port</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: 端口,</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    open</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    proxy</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      [process.env.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">VUE_APP_BASE_API</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]: {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        # 反向代理后端的HTTP端口,默认为8080</span></span>
<span class="line highlighted"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        target: http :</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//localhost:8080,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        changeOrigin: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        pathRewrite: {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">          [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;^&#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> +</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> process.env.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">VUE_APP_BASE_API</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;&#39;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    },</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    disableHostCheck</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  },</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br></div></div><h3 id="部署" tabindex="-1">部署 <a class="header-anchor" href="#部署" aria-label="Permalink to &quot;部署&quot;">​</a></h3><div class="tip custom-block"><p class="custom-block-title">提示</p><p>因为本项目是微服务的，所以部署方式有多种。</p></div><h4 id="微服务部署的主要方式‌" tabindex="-1">微服务部署的主要方式‌ <a class="header-anchor" href="#微服务部署的主要方式‌" aria-label="Permalink to &quot;微服务部署的主要方式‌&quot;">​</a></h4><p>微服务的部署方式主要有以下几种：</p><table tabindex="0"><thead><tr><th>部署方式</th><th style="text-align:left;">备注</th></tr></thead><tbody><tr><td>单机多进程</td><td style="text-align:left;">在单台机器上运行多个微服务进程，每个服务监听不同的端口并通过环回接口进行通信。</td></tr><tr><td>多台机器多进程</td><td style="text-align:left;">在多台机器上运行多个微服务进程，提供更高的可扩展性和可用性。</td></tr><tr><td>容器</td><td style="text-align:left;">将微服务封装在容器中，通过容器编排工具进行部署和管理。</td></tr><tr><td>‌编排器</td><td style="text-align:left;">使用‌Kubernetes或‌Nomad等编排器，自动化和管理微服务的部署。</td></tr><tr><td>无服务器</td><td style="text-align:left;">在云环境中直接运行代码，无需关心进程和服务器。</td></tr><tr><td>单主机多服务实例模式</td><td style="text-align:left;">在单台主机上运行多个服务实例，共享服务器资源。</td></tr></tbody></table><p>每种部署方式的详细描述和优缺点：</p><table tabindex="0"><thead><tr><th>部署方式</th><th style="text-align:left;">优点</th><th style="text-align:left;">缺点</th></tr></thead><tbody><tr><td>‌单机多进程</td><td style="text-align:left;">轻量级、方便、容易排除故障、固定计费。</td><td style="text-align:left;">没有可扩展性、单点故障、资源限制。</td></tr><tr><td>‌多台机器多进程</td><td style="text-align:left;">高可扩展性、高可用性。</td><td style="text-align:left;">成本较高、管理复杂。</td></tr><tr><td>‌容器</td><td style="text-align:left;">轻量级、灵活、易于管理。</td><td style="text-align:left;">学习曲线、资源隔离问题。</td></tr><tr><td>编排器</td><td style="text-align:left;">自动化、高可用性、可扩展性。</td><td style="text-align:left;">复杂度高、成本较高。</td></tr><tr><td>‌无服务器</td><td style="text-align:left;">无需关心服务器和进程、成本低。</td><td style="text-align:left;">适用范围有限、功能限制。</td></tr><tr><td>‌单主机多服务实例模式</td><td style="text-align:left;">资源利用高效、部署快速。</td><td style="text-align:left;">服务实例间隔离差、运维复杂。</td></tr></tbody></table><h4 id="线上环境" tabindex="-1">线上环境 <a class="header-anchor" href="#线上环境" aria-label="Permalink to &quot;线上环境&quot;">​</a></h4><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>JDK &gt;= 1.8 (推荐1.8版本)</span></span>
<span class="line"><span>Mysql &gt;= 5.7.0 (推荐5.7版本)</span></span>
<span class="line"><span>Redis &gt;= 3.0</span></span>
<span class="line"><span>Maven &gt;= 3.0</span></span>
<span class="line"><span>Node &gt;= 12</span></span>
<span class="line"><span>nacos &gt;= 2.0.4 (ruoyi-cloud &lt; 3.0 需要下载nacos &gt;= 1.4.x版本)</span></span>
<span class="line"><span>sentinel &gt;= 1.6.0</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p><a href="/examples/ruoyi-vue-work-item.html#部署">安装方法可以见若依前后端分离版的部署方法</a></p>`,44),l=[t];function p(r,d,h,c,o,k){return n(),a("div",null,l)}const g=s(e,[["render",p]]);export{b as __pageData,g as default};
